<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>리눅스 on 9Bon&#39;s_Docs</title>
    <link>docs.9bon.org/categories/%EB%A6%AC%EB%88%85%EC%8A%A4/</link>
    <description>Recent content in 리눅스 on 9Bon&#39;s_Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Tue, 01 Mar 2022 23:17:11 +0900</lastBuildDate><atom:link href="docs.9bon.org/categories/%EB%A6%AC%EB%88%85%EC%8A%A4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>리눅스 하드디스크 문제</title>
      <link>docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-%ED%95%98%EB%93%9C%EB%94%94%EC%8A%A4%ED%81%AC-%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Tue, 01 Mar 2022 23:17:11 +0900</pubDate>
      
      <guid>docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-%ED%95%98%EB%93%9C%EB%94%94%EC%8A%A4%ED%81%AC-%EB%AC%B8%EC%A0%9C/</guid>
      <description>Mount 설명 mount는 특정 저장장치를 디렉토리와 연결하는 행위입니다. 윈도우는 알아서 해주거나, 파일 관리자를 거쳐 해결할 수 있으며
요즘 리눅스들은 사용자 편의를 위해 알아서 데스크탑에 mount 하게 됩니다.
물론 mount를 하여 제대로 쓰기 위해선 fdisk와 같은 명령어로 포멧, 파일시스템 구축이 완료된 상태여야 합니다.
Mount 상태 확인 findmnt mount -l 도 있지만 위의 명령어가 훨씬 보기 편리합니다.
Mount 하기 mount /dev/&amp;lt;장치명&amp;gt; &amp;lt;마운트 포인트&amp;gt; 취소는
umount /dev/&amp;lt;장치명&amp;gt; 하지만 위의 명령어는 일시적이며 reboot 후 필요하다면 다시 입력해야 합니다.</description>
    </item>
    
    <item>
      <title>zsh, oh-my-zsh!</title>
      <link>docs.9bon.org/p/zsh-oh-my-zsh/</link>
      <pubDate>Fri, 24 Dec 2021 16:11:32 +0900</pubDate>
      
      <guid>docs.9bon.org/p/zsh-oh-my-zsh/</guid>
      <description>zsh 설명 기능이 다양해서 유행중인 bash 쉘을 대체하는 쉘입니다.
설치 apt-get install zsh chsh -s `which zsh` 쉘은 유저에 귀속되므로 권한에 주의해야 합니다. 또한 작은 따옴표가 아닙니다.
재시작 하면 설치가 완료됩니다.
echo $SHELL 로 확인 할 수 있습니다.
oh-my-zsh! 설명 zsh를 설정할 수 있는 편리한 콘피그들을 제공해주는 프레임워크입니다.
설치 curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh 해당 설치법은 http://ohmyz.sh/ 에서 제공하는 방법입니다. 문제가 생길경우 이곳에서 편집되었는지 확인할 수 있습니다.
설정 vim ~/.zshrc 에서 제가 주로 사용하는 것은</description>
    </item>
    
    <item>
      <title>아파치 SSL 적용, Let&#39;s Encrypt</title>
      <link>docs.9bon.org/p/%EC%95%84%ED%8C%8C%EC%B9%98-ssl-%EC%A0%81%EC%9A%A9-lets-encrypt/</link>
      <pubDate>Fri, 01 Oct 2021 18:41:21 +0900</pubDate>
      
      <guid>docs.9bon.org/p/%EC%95%84%ED%8C%8C%EC%B9%98-ssl-%EC%A0%81%EC%9A%A9-lets-encrypt/</guid>
      <description>서론 only HTTP 사용된 전달은 보호되지 않습니다. 우리가 입력할 아이디와 비밀번호는 평문으로 전달되게 될 것이며
이는 공격자가 쉽게 중간에서 가로챌 수 있습니다.
이를 방지하기 위해 지금은 TLS내지 SSL을 사용한 HTTPS가 사용되고 있습니다.
국내에서는 웹서버 정보제공자가 로그인과 관련된 페이지에서 HTTPS 사용을 의무한 법안이 시행중입니다.
인증서 페이지 제공자와 수신자는 CA(인증 기관&amp;ndash;업체)를 사이로 아래와 같은 작업을 시행합니다.
Let&amp;rsquo;s Encrypt https://letsencrypt.org/ko/ Let&amp;rsquo;s Encrypt 는 무료 CA입니다. 대신 해당 인증서는 짧은 유효기간을 가졌으며 설정의 제한이 많지만</description>
    </item>
    
    <item>
      <title>아파치 가상호스트 설정</title>
      <link>docs.9bon.org/p/%EC%95%84%ED%8C%8C%EC%B9%98-%EA%B0%80%EC%83%81%ED%98%B8%EC%8A%A4%ED%8A%B8-%EC%84%A4%EC%A0%95/</link>
      <pubDate>Thu, 02 Sep 2021 19:32:24 +0900</pubDate>
      
      <guid>docs.9bon.org/p/%EC%95%84%ED%8C%8C%EC%B9%98-%EA%B0%80%EC%83%81%ED%98%B8%EC%8A%A4%ED%8A%B8-%EC%84%A4%EC%A0%95/</guid>
      <description>서론 웹 서버 데몬은 한 호스트를 여러 호스트처럼 쓸 수 있는 가상 호스트(VirtualHost) 를 대부분 지원하고 있습니다. 포트번호, 서브도메인, 출발지 주소등의 규칙을 적용시킵니다. 이번엔 Debian과 Apache로 서브 도메인에 따른 규칙으로 가상 호스트를 구현해 보도록 하겠습니다. 마지막엔 cloud.9bon.org와 9bon.org가 똑같은 장치에 구성되어있음에 불구하고 서로 다른 내용을 보여주는 것이 목표입니다.
아파치 준비 아파치가 설치되어있지 않으면 패키지 관리자로 쉽게 설치 가능합니다.
apt-get update &amp;amp;&amp;amp; apt-get install apache2 또한 앞으로의 과정 중 재시작을 하고 싶을땐 다음과 같습니다.</description>
    </item>
    
    <item>
      <title>휴고 서버에 직접 구동시키기</title>
      <link>docs.9bon.org/p/%ED%9C%B4%EA%B3%A0-%EC%84%9C%EB%B2%84%EC%97%90-%EC%A7%81%EC%A0%91-%EA%B5%AC%EB%8F%99%EC%8B%9C%ED%82%A4%EA%B8%B0/</link>
      <pubDate>Wed, 01 Sep 2021 14:21:27 +1023</pubDate>
      
      <guid>docs.9bon.org/p/%ED%9C%B4%EA%B3%A0-%EC%84%9C%EB%B2%84%EC%97%90-%EC%A7%81%EC%A0%91-%EA%B5%AC%EB%8F%99%EC%8B%9C%ED%82%A4%EA%B8%B0/</guid>
      <description>서론 학습했던 것들을 정리하기 위해 정적 페이지를 알아보다 HUGO와 Github page를 사용한 대중적인 게시글들을 확인할 수 있었습니다. Github page를 사용하면 관리하기 편리할 것 같지만 호스팅 경험을 위하여 예전부터 동작 중인 개인 서버를 통해 가동해 보겠습니다.
Homebrew 설치 2021년 08월 29일 기준 데비안 10.10 버전의 apt 패키지 관리자에서는 최신 버전의 hugo를 지원하지 않고 있습니다. 사용하고 싶은 테마가 최신버전의 hugo에서만 지원하고 있기 때문에 수동으로 받아 설치하거나 다른 패키지 관리자를 사용하는 것이 방법일 것입니다.</description>
    </item>
    
  </channel>
</rss>
